// This Project is Taking a Word and Convert it to a BIG BLOCK LETTER with O
// â¬› is BLACK ğŸŸ¥ is RED
letters_code = [[['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], [' ']],  // A
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], [' ']],  // B
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], [' ']],  // C
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], [' ']],  // D
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], [' ']],  // E
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], [' ']],  // F
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], [' ']],  // G
                [['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], [' ']],  // H
                [['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], [' ']],  // I
                [['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›â¬›'], [' ']],  // J
                [['ğŸŸ¥â¬›â¬›ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥â¬›â¬›â¬›'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›â¬›'], ['ğŸŸ¥â¬›â¬›ğŸŸ¥ğŸŸ¥'], [' ']],  // K
                [['â¬›ğŸŸ¥â¬›â¬›â¬›'], ['â¬›ğŸŸ¥â¬›â¬›â¬›'], ['â¬›ğŸŸ¥â¬›â¬›â¬›'], ['â¬›ğŸŸ¥â¬›â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], [' ']],  // L
                [['ğŸŸ¥ğŸŸ¥â¬›ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], [' ']],  // M
                [['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], [' ']],  // N
                [['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], [' ']],  // O
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], [' ']],  // P
                [['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['â¬›â¬›â¬›ğŸŸ¥ğŸŸ¥'], [' ']],  // Q
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], [' ']],  // R
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['â¬›â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], [' ']],  // S
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], [' ']],  // T
                [['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], [' ']],  // U
                [['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥â¬›ğŸŸ¥â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], [' ']],  // V
                [['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›ğŸŸ¥â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥â¬›ğŸŸ¥â¬›'], [' ']],  // W
                [['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥â¬›ğŸŸ¥â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›ğŸŸ¥â¬›ğŸŸ¥â¬›'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], [' ']],  // X
                [['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['ğŸŸ¥â¬›â¬›â¬›ğŸŸ¥'], ['â¬›ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], [' ']],  // Y
                [['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], ['â¬›â¬›â¬›ğŸŸ¥â¬›'], ['â¬›â¬›ğŸŸ¥â¬›â¬›'], ['â¬›ğŸŸ¥â¬›â¬›â¬›'], ['ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥'], [' ']],  // Z
                [['â¬›â¬›â¬›'], ['â¬›â¬›â¬›'], ['â¬›â¬›â¬›'], ['â¬›â¬›â¬›'], ['â¬›â¬›â¬›'], ['â¬›']],  // SPACE
]
alphabet = {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5,  // Dictionary for letter position in letter code.
            'G': 6, 'H': 7, 'I': 8, 'J': 9, 'K': 10,
            'L': 11, 'M': 12, 'N': 13, 'O': 14, 'P': 15,
            'Q': 16, 'R': 17, 'S': 18, 'T': 19, 'U': 20,
            'V': 21, 'W': 22, 'X': 23, 'Y': 24, 'Z': 25, ' ': 26
}
let BlockLetter = []
let word = prompt("Enter a word which you would like to be converted into block letter:", "");  // take a word or can be sentence
let word_length = word.length;  // length of word to know how much should repeat the letter converter
for (let i = 0; i < 6; i++){  // the tall of  each letter
    for (let letter = 0; letter < word_length; letter++){    // repeat for how many word
        let output = letters_code[alphabet[word[letter]]][i];  // put the number of letter in alphabet and convert it to code
        if (letter === word_length - 1) {  // Go next line
            output += '<br/>';
        }
        BlockLetter.push(output);
    }
}
document.getElementById('mainContent-JS').innerHTML = BlockLetter.toString();